<main>
  <h1 class="title">Ciphers In Ruby</h1>

  <div class="content-container">
    <%= form_with url: "/", id: "cipher-form" , multipart: true, remote: true do |f| %>
      <div class="field-wrapper">
        <%= f.label :input_type, "Input type:" %>
        <div class="select-dropdown" >
          <%= f.select :input_type, [["Text","text"], ["File","file"]], selected: 'text' %>
        </div>
      </div>
      <div class="field-wrapper" id="input_field">
        <%= f.label :input_text, "Input text:" %>
        <%= f.text_area :input_text, rows: 5, cols: 60, required: true, value: @input_text %>
      </div>
      <div class="field-wrapper">
        <%= f.label :cipher_type, "Cipher type:" %>
        <div class="select-dropdown" >
        <%= f.select :cipher_type, [["Vigenere", "vigenere"], ["Auto-Key Vigenere","auto-key-vigenere"], ["Extended Vigenere","extended-vigenere"], ["Playfair","playfair"], ["Affine","affine"], ["Hill", "hill"], ["Super Encryption (Extended Vigenere Cipher and Transposition)", "super"], ["Enigma", "enigma"]], selected: @cipher_type == nil ? "vigenere" : @cipher_type %>
        </div>
      </div>
      <div class="field-wrapper">
        <%= f.label :key, "Key:" %>
        <%= f.text_field :key, value: @key, required: true %>
      </div>
      <div class="button-wrapper">
        <%= f.submit "Encrypt", class: "button-2" %>
        <%= f.submit "Decrypt", class: "button-2"%>
      </div>
    <%end%>


    <div id="output">
      <div class="output-wrapper">
        <label for="ciphertext-output">Output text:</label>
        <textarea id="ciphertext-output" rows="5" cols="60" disabled></textarea>
        <div class="button-wrapper">
          <button id="plaintext" class="button-2">Plaintext</button>
          <button id="base64" class="button-2">Base64</button>
        </div>
      </div>
      <div class="output-wrapper">
        <label for="ciphertext-output-bytes">Output bytes:</label>
        <textarea id="ciphertext-output-bytes" rows="5" cols="60" disabled><%= @result_bytes%></textarea>
      </div>
    </div>
    <div id="download">
      <button id="download-file" class="button-2" onclick="download()">Download</button>
      <button id="download-binary" class="button-2" onclick="downloadBinary()">Download as binary</button>
    </div>
  </div>

  <footer>
    Created by Aditya and Nathanael
  </footer>
</main>

<script>
  function saveFile(fileName,urlFile){
      let a = document.createElement("a");
      a.style = "display: none";
      document.body.appendChild(a);
      a.href = urlFile;
      a.download = fileName;
      a.click();
      window.URL.revokeObjectURL(url);
      a.remove();
  }

  function download() {
    let bytesRaw = document.getElementById("ciphertext-output-bytes").value;
    // Parse bytes array
    let bytes = new Uint8Array(
      bytesRaw
        .trim()
        .replace(/[\[\]\ ]/g, "")
        .split(",")
        .map(Number)
    )
    let type = "<%= @content_type%>";
    let fileName = "output";
    let urlFile = "";
    urlFile = URL.createObjectURL(new Blob([bytes], {type: type}));
    fileName += ".<%= @file_type%>";
    saveFile(fileName,urlFile);
  }

  function downloadBinary() {
    let bytesRaw = document.getElementById("ciphertext-output-bytes").value;
    // Parse bytes array
    let bytes = new Uint8Array(
      bytesRaw
        .trim()
        .replace(/[\[\]\ ]/g, "")
        .split(",")
        .map(Number)
    )
    let fileName = "output";
    let urlFile = "";
    urlFile = URL.createObjectURL(new Blob([bytes], {type: "octet/stream"}));
    fileName += ".bin";
    saveFile(fileName,urlFile);
  }
</script>